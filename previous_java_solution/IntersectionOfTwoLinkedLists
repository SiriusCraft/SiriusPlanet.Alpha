/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode p = headA, q = headB;
        int lenA=0, lenB=0, diff=0;
        while(p!=null){
        	p = p.next;
        	lenA++;
        }
        while(q!=null){
        	q = q.next;
        	lenB++;
        }
        
        p = headA;
        q = headB;

        if (lenA>lenB) {
        diff = lenA-lenB;	
        for(int i =0; i<diff; i++){
        	p = p.next;
        }
        while(p!=null){
        	if (p == q) {
        		return p;
        	}
        	p = p.next;
        	q = q.next;
        }return null;
        }else {
        	diff = lenB - lenA;
        for(int i =0; i<diff; i++){
        	q = q.next;
        }
        while(p!=null){
        	if (p == q) {
        		return p;
        	}
        	p = p.next;
        	q = q.next;
        }return null;
        }
    }
}
